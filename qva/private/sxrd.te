# Copyright (c) 2017, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

typeattribute sxrd coredomain;
typeattribute sxrd mlstrustedsubject;
type sxrd_exec, system_file_type, exec_type, file_type;

init_daemon_domain(sxrd)

#
# General
#

binder_call(sxrd, system_server);

# Allow interracting with sxrd directory
allow sxrd sxrd_data_file:dir create_dir_perms;
allow sxrd sxrd_data_file:file create_file_perms;

#allow binder use for checking permissions
binder_use(sxrd)
allow sxrd permission_service:service_manager find;

#Allow hardware binder use
hwbinder_use(sxrd)
get_prop(sxrd, hwservicemanager_prop)

# Allow access to our socket
allow sxrd sxrd_socket:sock_file rw_file_perms;

#
# Graphics
#

#Allow hal graphics mapper permissions
hal_client_domain(sxrd, hal_graphics_composer);

#Allow hal graphics allocator permissions
hal_client_domain(sxrd, hal_graphics_allocator);

# whitelisting ioctlcmd c302
allowxperm sxrd self:socket ioctl msm_sock_ipc_ioctls_system;
allow sxrd self:socket ioctl;

#allow udp socket
#allow sxrd self:capability { net_admin };
#allow sxrd self:udp_socket { ioctl create read write setopt getopt bind };
#allow sxrd node:udp_socket node_bind;
#allow sxrd port:udp_socket name_bind;

#allow usb access
allow sxrd usb_device:chr_file rw_file_perms;
allow sxrd usb_device:dir r_dir_perms;

#alloc netlink access
allow sxrd self:netlink_kobject_uevent_socket { create read setopt bind };

#Allow access to PCM sound card
allow sxrd audio_device:chr_file rw_file_perms;
allow sxrd audio_device:dir r_dir_perms;

#Allow access to Audio Flinger APIs
binder_call(sxrd, audioserver)
allow sxrd audioserver_service : service_manager find;

# Add rule to access /proc/asound/pcm file
r_dir_file(sxrd, proc_asound)
