type vendor_mmi, domain;
type vendor_mmi_exec, exec_type, vendor_file_type, file_type;
typeattribute vendor_mmi  system_writes_vendor_properties_violators;
#started by init
init_daemon_domain(vendor_mmi)

#self capability
allow vendor_mmi self:{ socket udp_socket } create_socket_perms_no_ioctl;
allow vendor_mmi self:capability { fowner fsetid kill };

#For various devices
allow vendor_mmi {
    sysfs_socinfo
    sysfs_devices_system_cpu
    sysfs_usb_supply
    sysfs_battery_supply
    sysfs_power
    sysfs_graphics
    sysfs_wake_lock
}:file rw_file_perms;

#socket
allow vendor_mmi socket_device:dir w_dir_perms;
allow vendor_mmi vendor_mmi_socket:sock_file create_file_perms;
type_transition vendor_mmi socket_device:sock_file vendor_mmi_socket;

#allow mmi set system prop
set_prop(vendor_mmi, powerctl_prop)
allow vendor_mmi mnt_vendor_file:dir r_dir_perms;

#Allow mmi operate on graphics
hal_client_domain(vendor_mmi, hal_graphics_allocator);

#Allow mmi to use IPC
binder_call(vendor_mmi,surfaceflinger)

#access kmsg device for logging
allow vendor_mmi kmsg_device:chr_file rw_file_perms;

#mmi test case
unix_socket_connect(vendor_mmi, cnd, cnd);
unix_socket_connect(vendor_mmi, netmgrd, netmgrd);
net_domain(vendor_mmi);
allow vendor_mmi vendor_mmi_exec:file execute_no_trans;
allow vendor_mmi proc:file r_file_perms;

#allow mmi access boot mode switch
set_prop(vendor_mmi, vendor_boot_mode_prop)

#diag
userdebug_or_eng(`
    diag_use(vendor_mmi)
')
